# How many years did the proportion of boys exceed 52?
sum(present$propBoys>0.512)
#allows R Studio to read the csv file
present <- read.csv("present.csv", header = TRUE)
# Setting a working directory to get the proper data
setwd("/Users/raphaelpalacio/Desktop/Emory/Y3S1/QTM100/Lab/LabHomework/LabHw1")
#allows R Studio to read the csv file
present <- read.csv("present.csv", header = TRUE)
# How many years did the proportion of boys exceed 52?
sum(present$propBoys>0.512)
# Proportion of boys and girls
present$propBoys <- present$boys / (present$boys + present$girls)
present$propGirls <- present$girls / (present$boys + present$girls)
# How many years did the proportion of boys exceed 52?
sum(present$propBoys>0.512)
# How many years did the proportion of boys exceed 52?
sum(present$propBoys<0.512)
clear
setwd("/Users/raphaelpalacio/Desktop/Emory/Y3S1/QTM100/Lab/Lab2")
babies <- read.table("babies.txt", header = TRUE)
babies <- read.table("babies.txt", header = TRUE)
# all variables in the data set
str(babies)
summary(babies)
# Table of parityf
table(babies$parityf)
# Best way to summarize catagorical variables is to use a table
# c(0, 1) -> false, true basucally conditions
babies$parityf <- factor(babies$parity, lables = c("first born", "otherwise"))
# Best way to summarize catagorical variables is to use a table
# c(0, 1) -> false, true basucally conditions
babies$parityf <- factor(babies$parity, lables = c("first born", "otherwise"))
# The summary function tells us range and mean/median
summary(babies$parity)
# Best way to summarize catagorical variables is to use a table
# c(0, 1) -> false, true basucally conditions
babies$parityf <- factor(babies$parity, lables = c("first born", "otherwise"))
# The table function shoes us that the parity/smoking only takes on two values
table(babies$parity)
table(babies$smoke)
# Best way to summarize catagorical variables is to use a table
# c(0, 1) -> false, true basucally conditions
babies$parityf <- factor(babies$parity, lables = c("first born", "otherwise"))
# The summary function tells us range and mean/median
summary(babies$parity)
# see the structure of the data
str(babies)
# Best way to summarize catagorical variables is to use a table
# c(0, 1) -> false, true basucally conditions
babies$parityf <- factor(babies$parity,labels=c("first born","otherwise"))
babies$smokef <- factor(babies$smoke, lables = c("not now", "yes now"))
babies$smokef <- factor(babies$smoke,lables = c("not now", "yes now"))
babies$smokef <- factor(babies$smoke,lables= ("not now", "yes now"))
babies$smokef <- factor(babies$smoke,lables= ("not now", "yes now"))
abies$smokef <- factor(babies$smoke,labels=c("not now","yes now"))
abies$smokef <- factor(babies$smoke,labels=c("not now","yes now"))
# Best way to summarize catagorical variables is to use a table
# c(0, 1) -> false, true basucally conditions
babies$parityf <- factor(babies$parity,labels = c("first born","otherwise"))
babies$smokef <- factor(babies$smoke,labels = c("not now","yes now"))
babies$smokef <- factor(babies$smoke, lables = c("not now", "yes now"))
babies$smokef <- factor(babies$smoke, lables = c("not now", "yes now"))
babies$parityf <- factor(babies$parity,labels = c("first born","otherwise"))
babies$smokef <- factor(babies$smoke, lables = c("not now", "yes now"))
babies$smokef <- factor(babies$smoke, labels = c("not now", "yes now"))
setwd("C:/Users/rapha/Desktop/Emory/Y3S1/QTM100/Lab/Lab2")
setwd("/Users/raphaelpalacio/Desktop/Emory/Y3S1/QTM100/Lab/Lab2")
babies <-read.table("babies.txt", header = TRUE)
babies$parityf <-factor(babies$parity, labels = c("first born", "otherwise"))
getwd()
babies$smokef <-factor(babies$smoke, labels = c("not now", "yes now"))
# Reveal all fo the variables in the data set of type string (str)
str(babies)
#Summary of the data set
summary(babies)
# Variables parity and smoke do not represent numeric measurements
# Convert them to categorical variables
# 0 -> not that condition; 1 -> that condition
babies$parityf <-factor(babies$parity, labels = c("first born", "otherwise"))
babies$smokef <-factor(babies$smoke, labels = c("not now", "yes now"))
# Run again with the new variables
str(babies)
# Run again with the new variables
str(babies$parityf)
summary(babies$parityf)
#Summary command to give overall numerical summary of the data set
summary(babies$bwt)
# Get the mean of birth weight (bwt)
mean (babies$bwt)
#Get the SD of numerical variable
sd(babies$bwt)
# Summarize bwet separatrly from smking and non - smoking mothers
tapply(X = babies$bwt, INDEX = babies$smokef. FUN = sd)
# Summarize bwet separatrly from smking and non - smoking mothers
tapply(X = babies$bwt, INDEX = babies$smokef=, FUN = sd)
# Summarize bwet separatrly from smking and non - smoking mothers
tapply(X = babies$bwt, INDEX = babies$smokef, FUN = sd)
tapply(X = babies$bwt. INDEX = babies$smokef, FUN = sd)
tapply(X = babies$bwt, INDEX = babies$smokef, FUN = sd)
tapply(X = babies$bwt, INDEX = babies$smokef, FUN = sd)
tapply(X = babies$bwt, INDEX = babies$smokef, FUN = mean)
# Visualizing numerical variables
hist(babies$bwt)
boxplot(babies$bwt)
#Side by Side box plots
boxplot(babies$bwt ~ babies$smokef)
# You can also use the scatterplot
plot(babies$gesgation, babies$bwt)
# You can also use the scatterplot
plot(babies$gestation, babies$bwt)
# Visualizing Categorical Variables
tables(babies$smokef)
# Visualizing Categorical Variables
tables(babies$smokef)
# Visualizing Categorical Variables
tables(babies$smokef)
# Visualizing Categorical Variables
table(babies$smokef)
# See the sum of obsercation(margins)
smk.tab <- table(babies$smokef)
smk.tab
addmargins(smk.tab)
# Table between two categorical variables to show a relationship
table(babies$smokef, babies$parityf)
# Get margins and proportion s from a 2x2 table
smk.par.tab <- table(babies$smokef, babies$parityf)
addmargins(smk.par.tab)
prop.table(smkr.par.tab)
prop.table(smk.par.tab)
# Visualizing Categorical Variables
# Get a bar plot
barplot(smk.tab)
#Whenever we use counts, we always use side by side bar plots
barplot(smk.par.tab, bestide = T, legent.text = T)
# bar plot with proportions
barplot((prop.table(smk.par.tab, margin = 2), beside = F, legent.text = T))
# bar plot with proportions
barplot((prop.table(smk.par.tab, margin = 2), beside = F, legent.text = T)
# bar plot with proportions
barplot(prop.table(smk.par.tab, margin = 2), beside = F, legend.text = T)
